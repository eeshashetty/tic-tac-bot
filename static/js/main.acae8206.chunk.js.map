{"version":3,"sources":["patterns.js","minimax.js","tictactoe.js","App.js","serviceWorker.js","index.js"],"names":["check","grid","i","module","exports","checkscore","value","res","require","minimax","board","depth","maxMode","alpha","beta","gameOver","bestVal","Infinity","length","Math","max","min","bestMove","moveVal","console","log","Grid","x","result","pattern","handleClick","Finish","className","map","val","onClick","gridClass","includes","TicTacToe","state","full","bind","onReset","updateBot","checkRes","newGrid","this","pos","setState","filter","Component","Display","href","target","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.acae8206.chunk.js","sourcesContent":["function check(grid) {\n    for(let i = 0; i<=6; i+=3)\n    {\n        if(grid[i]===grid[i+1] && grid[i+1]===grid[i+2])\n        {    \n            if(grid[i]==='X')\n            { return {'res': 'X', 'pattern': [i,i+1,i+2]}}\n        \n            if(grid[i]==='O')\n            { return {'res': 'O', 'pattern':[i,i+1,i+2]}}\n        }\n\n    }\n\n    for(let i = 0; i<3; i++)\n    {\n        if(grid[i]===grid[i+3] && grid[i+3]===grid[i+6])\n       {   \n           if(grid[i]==='X')\n           { return {'res': 'X', 'pattern':[i,i+3,i+6]}}\n           \n           if(grid[i]==='O')\n            { return {'res': 'O', 'pattern':[i,i+3,i+6]}}\n        }\n                \n\n    }\n\n    if(grid[0]===grid[4] && grid[4]===grid[8]) {\n        {    \n            if(grid[0]==='X')\n            { return {'res': 'X', 'pattern': [0,4,8]}}\n        \n            if(grid[0]==='O')\n            { return {'res': 'O', 'pattern':[0,4,8]}}\n        }\n            \n    }\n\n    if(grid[2]===grid[4] && grid[4]===grid[6]) {\n        if(grid[2]==='X')\n            { return {'res': 'X', 'pattern': [2,4,6]}}\n        \n            if(grid[2]==='O')\n            { return {'res': 'O', 'pattern':[2,4,6]} }\n     \n    }\n\n    return {'res': 'D', 'pattern': []}\n}\n\nfunction checkscore(grid) {\n    let value = 0\n  \n    if (check(grid).res === 'X') {\n        value = -10\n    }\n  \n    if (check(grid).res === 'O') {\n        value = 10\n    }\n\n    return value\n\n}\n\nmodule.exports = {check, checkscore}","const { checkscore } = require('./patterns')\n\n\nfunction gameOver(board) {\n    for (let i in board) {\n        if (board[i] === \"\") { return false }\n    }\n    return true\n}\n\nfunction minimax(board, depth, maxMode, alpha, beta) {\n    let value = checkscore(board)\n    \n    if (value === 10 || value === -10) {\n        return value\n    }\n\n    if (gameOver(board) === true) {\n        return 0\n    }\n\n    if (maxMode) {\n        let bestVal = -Infinity\n        for (let i = 0; i < board.length; i++) {\n            if (board[i] === \"\") {\n                board[i] = \"O\"\n                value = minimax(board, depth + 1, false)\n                bestVal = Math.max(bestVal, value)\n                board[i] = \"\"\n            }\n        }\n\n        return bestVal\n    }\n\n    else {\n        let bestVal = Infinity\n        for (let i = 0; i < board.length; i++) {\n            if (board[i] === \"\") {\n                board[i] = \"X\"\n                value = minimax(board, depth + 1, true)\n                bestVal = Math.min(bestVal, value)\n                beta = Math.min(beta, bestVal)\n                board[i] = \"\"\n            }\n        }\n\n        return bestVal\n    }\n}\n\nfunction bestMove(board) {\n    let bestVal = -Infinity\n    let bestMove = -1\n    let moveVal = -Infinity\n\n    for (let i = 0; i < board.length; i++) {\n    if (board[i] === \"\") {\n\n        board[i] = \"O\"\n        moveVal = minimax(board, 0, false)\n        board[i] = \"\"\n        if (moveVal > bestVal) {\n            bestVal = moveVal\n            bestMove = i\n        }\n\n        }\n    }\n\n    console.log(`Best Move is to Position ${bestMove}`)\n    console.log(`Value =  ${bestVal}`)\n\n    return bestMove\n}\n\nbestMove([\"X\", \"\", \"O\", \"\", \"X\", \"\", \"\", \"\", \"\"])\nmodule.exports = bestMove","import React, {Component} from 'react';\nimport './tictactoe.css';\nvar { check } =  require(\"./patterns\")\nvar bestMove = require(\"./minimax\")\n\nclass TicTacToe extends Component {\n    constructor() {\n      super()\n      this.state = { grid: [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"], x: true, full: false, result: null, pattern: null };\n      this.handleClick = this.handleClick.bind(this);\n      this.onReset = this.onReset.bind(this);\n      this.updateBot = this.updateBot.bind(this);\n      this.checkRes = this.checkRes.bind(this);\n    }\n\n    updateBot() {\n      let newGrid = [...this.state.grid]\n      let pos = bestMove(newGrid)\n      console.log(\"*\")\n      newGrid[pos] = 'O'\n      let full = this.checkRes(newGrid)\n      this.setState({grid: newGrid, x: true, full: full})\n    }\n\n    checkRes(grid = this.state.grid) {\n      let full = grid.filter(val => val===\"\").length === 0\n      \n      let {res, pattern} = check(grid)\n     \n      if(res === 'X') {\n        this.setState({result: 'X', pattern: pattern}) \n      }\n      if(res === 'O') {\n        this.setState({result: 'O', pattern: pattern}) \n      }\n      if(res === 'D' && full===true) {\n        this.setState({result: 'D'}) \n      }\n       return full\n    }\n\n    handleClick(pos) {\n      if (this.state.grid[pos]===\"\" && this.state.result===null) {\n      \n      let val = this.state.x?'X':'O'\n      \n      let grid = this.state.grid\n      grid[pos] = val\n      \n      let full = this.checkRes()\n      this.setState({grid: grid, x:!this.state.x, full: full})\n      console.log({grid: grid, x:!this.state.x, full: full})\n      this.updateBot()\n     }\n\n\n    }\n\n    onReset() {\n      this.setState({ grid: [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"], x: true, full: false, result: null, pattern: null })\n    }\n\n    render () {\n      return (\n        <div className=\"fix-grid\">\n        <Grid x = {this.state.x} result={this.state.result} grid={this.state.grid} pattern={this.state.pattern} handleClick={this.handleClick}/>\n        <button className=\"reset\" onClick={this.onReset}>RESET</button>\n        </div>\n    );\n  }\n}\n\n\nfunction Grid({ x, result, grid, pattern, handleClick}) {\n  if(result === null)\n  {\n    return (\n      <div>\n        <center><Finish result={\"\"} /></center>\n      <div className=\"grid-container\">\n      {\n        grid.map((val, i) => {\n          return (\n          <div className=\"grid-item hover\" onClick={() => handleClick(i)}>{grid[i]===\"O\"?\"🤖\":(grid[i]===\"X\"?\"🤸‍♀️\":grid[i])}</div>\n          );\n        })\n      }\n      </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n    <center><Finish result={result} /></center>\n    <div className=\"grid-container\">\n    {\n      grid.map((val, i) => {\n        let gridClass = \"grid-item\"\n        if(pattern!=null && pattern.includes(i)){\n          gridClass = \"gsel\"\n        }\n        \n        return(\n          <div className={gridClass} onClick={() => handleClick(i)}>{grid[i]===\"O\"?\"🤖\":(grid[i]===\"X\"?\"🤸‍♀️\":grid[i])}</div>\n        );\n      })\n    }\n    </div>\n    </div>\n  );\n}\n\n\nfunction Finish({ result }) {\n  if(result === '')\n  {\n    return(<h1 className=\"hide\">Bla</h1>)\n  }\n\n  if(result === 'D')\n  {\n    return(<h1 className=\"over\">Draw!</h1>)\n  }\n\n  if(result === 'X')\n  {\n    return(<h1 className=\"over\">You Win</h1>)\n  }\n\n  if(result === 'O')\n  {\n    return(<h1 className=\"over\">Bot Wins!</h1>)\n  }\n}\n\nexport default TicTacToe;","import React, { Component } from 'react';\nimport TicTacToe from './tictactoe';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n  return (\n    <div className=\"App\">\n      <TicTacToe/>\n      <Display />\n      </div>\n  );\n}\n}\nfunction Display () {\n    return (\n      <div className=\"display\">\n      <div className=\"header\">\n        Tic-Tac-🤖\n      </div>  \n      <div className=\"links\">by <a href=\"https://eeshashetty.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">@eeshashetty</a></div>\n      </div>\n    );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}